name: Deploy LX-FTA Gateway

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  FRONTEND_DIR: frontend
  BACKEND_DIR: backend
  S3_BUCKET_NAME: lx-fta-frontend
  ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
  DISTRIBUTION_ID:  ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} # Replace this with actual CloudFront distribution ID

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üõë Checkout Code
        uses: actions/checkout@v3

      - name: ‚òÅÔ∏è Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION  }}

      - name: üê≥ Login to Amazon ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URL="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URL

      - name: üê≥ Build and Push Docker Image (Backend)
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URL="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          IMAGE_NAME="${ECR_URL}/${ECR_REPO}:latest"
          
          docker build -t $IMAGE_NAME $BACKEND_DIR
          docker push $IMAGE_NAME

      - name: üåê Build Frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          npm ci
          npm run build

      - name: ‚òÅÔ∏è Deploy Frontend to S3
        run: |
          aws s3 sync $FRONTEND_DIR/build s3://$S3_BUCKET_NAME --delete

      - name: üöÄ Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
