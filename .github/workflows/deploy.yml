name: Deploy LX-FTA Gateway

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  FRONTEND_DIR: frontend
  S3_BUCKET_NAME: lx-fta-frontend
  DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
  ECR_REPO: lx-fta-backend
  BACKEND_DIR: backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm ci

      - name: Build frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync frontend to S3
        run: aws s3 sync ${{ env.FRONTEND_DIR }}/build s3://${{ env.S3_BUCKET_NAME }}/ --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*"

      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"

      - name: Build and push Docker image
        working-directory: ${{ env.BACKEND_DIR }}
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:latest"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
